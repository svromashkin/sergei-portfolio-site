// –≥–æ–¥ –≤ —Ñ—É—Ç–µ—Ä–µ
document.getElementById('year').textContent = new Date().getFullYear();

// –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ email
document.querySelectorAll('[data-copy]').forEach(btn => {
  btn.addEventListener('click', () => {
    const sel = btn.getAttribute('data-copy');
    const el = document.querySelector(sel);
    const text = el?.textContent?.trim();
    if (!text) return;
    navigator.clipboard.writeText(text).then(() => {
      const prev = btn.textContent;
      btn.textContent = '–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ ‚úì';
      setTimeout(() => (btn.textContent = prev), 1200);
    });
  });
});

// –ø–ª–∞–≤–Ω—ã–π —Å–∫—Ä–æ–ª–ª
document.querySelectorAll('a[href^="#"]').forEach(link => {
  link.addEventListener('click', e => {
    const target = document.querySelector(link.getAttribute('href'));
    if (target) {
      e.preventDefault();
      target.scrollIntoView({ behavior: 'smooth', block: 'start' });
    }
  });
});

// –∫–Ω–æ–ø–∫–∞ –ø–µ—á–∞—Ç–∏ –≤ PDF
const printBtn = document.getElementById('printBtn');
if (printBtn) {
  printBtn.addEventListener('click', () => window.print());
}

// –∞–≤—Ç–æ-–ø–∞—É–∑–∞/–ø–ª–µ–π –≤–∏–¥–µ–æ –ø–æ –≤–∏–¥–∏–º–æ—Å—Ç–∏
(() => {
  const v = document.getElementById('heroVideo');
  if (!v || !('IntersectionObserver' in window)) return;

  const onVis = (entries) => {
    for (const e of entries) {
      if (e.isIntersecting) {
        v.play().catch(()=>{});
      } else {
        v.pause();
      }
    }
  };
  const io = new IntersectionObserver(onVis, { root: null, threshold: 0.25 });
  io.observe(v);

  // —Å—Ç—Ä–∞—Ö–æ–≤–∫–∞: –Ω–∞ —Ç–∞—á-—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö –±–µ–∑ –∞–≤—Ç–æ–ø–ª–µ—è ‚Äî –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è —Å—Ç–∞—Ä—Ç–∞–Ω—É—Ç—å —á–µ—Ä–µ–∑ –∂–µ—Å—Ç
  document.addEventListener('touchstart', () => v.play().catch(()=>{}), { once: true, passive: true });
})();

// –∞–≤—Ç–æ–ø–∞—É–∑–∞ —Å–µ–∫—Ü–∏–æ–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ + fade-in –ø–æ –≤–∏–¥–∏–º–æ—Å—Ç–∏
(() => {
  const vids = Array.from(document.querySelectorAll('.section-video'));
  if (!vids.length || !('IntersectionObserver' in window)) return;

  vids.forEach(v => v.style.opacity = '0');

  const onVis = (entries) => {
    for (const e of entries) {
      const v = e.target;
      if (e.isIntersecting) {
        v.play().catch(()=>{});
        v.style.transition = 'opacity .6s ease';
        v.style.opacity = '1';
      } else {
        v.pause();
      }
    }
  };

  const io = new IntersectionObserver(onVis, { root: null, threshold: 0.25 });
  vids.forEach(v => io.observe(v));
})();

// === Anchor smart scroll (respects fixed #topnav height) ===
(function(){
  function topnavH(){
    const n = document.getElementById('topnav');
    return (n && n.offsetHeight) || 60;
  }
  function setVar(){
    document.documentElement.style.setProperty('--topnav-h', topnavH() + 'px');
  }
  function scrollToId(id){
    const el = document.getElementById(id);
    if(!el) return;
    const y = el.getBoundingClientRect().top + window.scrollY - topnavH() - 12;
    window.scrollTo({ top: y, behavior: 'smooth' });
  }
  // Init
  document.addEventListener('DOMContentLoaded', () => {
    setVar();
    // –ï—Å–ª–∏ –ø—Ä–∏—à–ª–∏ –ø–æ —Ö—ç—à—É ‚Äî —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –ø–æ–∑–∏—Ü–∏—é
    if(location.hash && location.hash.length > 1){
      setTimeout(()=>scrollToId(decodeURIComponent(location.hash.substring(1))), 0);
    }
  });
  window.addEventListener('resize', setVar);

  // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –∫–ª–∏–∫–∏ –ø–æ —è–∫–æ—Ä—è–º –∏ —Å–∫—Ä–æ–ª–ª–∏–º —Ç–æ—á–Ω–æ –ø–æ–¥ –º–µ–Ω—é
  document.addEventListener('click', (e) => {
    const a = e.target.closest('a[href^="#"]');
    if(!a) return;
    const href = a.getAttribute('href');
    const id = decodeURIComponent(href.slice(1));
    const el = document.getElementById(id);
    if(!el) return;
    e.preventDefault();
    scrollToId(id);
    history.pushState(null, '', '#' + id);
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä—è–º–æ–π —Å–º–µ–Ω—ã hash (–Ω–∞–ø—Ä–∏–º–µ—Ä, Back/Forward)
  window.addEventListener('hashchange', () => {
    const id = decodeURIComponent((location.hash || '').slice(1));
    if(id) scrollToId(id);
  });
})();

// === Mobile bottom-nav icons mapping v2 ===
(function(){
  function setIcons(){
    var nav = document.getElementById('topnav');
    if(!nav) return;
    var links = nav.querySelectorAll('.tabs a');
    links.forEach(function(a){
      var t = (a.textContent || "").toLowerCase();
      var h = (a.getAttribute('href') || "").toLowerCase();
      var icon = "‚ùñ";
      if (/summ|summary|–≥–ª–∞–≤|–æ –º–Ω–µ|about/.test(t+h)) icon = "üß≠";
      else if (/–∫–æ–º–ø–µ—Ç|skills|skill|–Ω–∞–≤—ã–∫/.test(t+h)) icon = "üß†";
      else if (/proj|–ø–æ—Ä—Ç—Ñ|works|cases|case/.test(t+h)) icon = "üìÇ";
      else if (/exp|–æ–ø—ã—Ç|career|cv|—Ä–µ–∑—é–º–µ/.test(t+h)) icon = "üíº";
      else if (/pub|—Å—Ç–∞—Ç—å|articles|blog/.test(t+h)) icon = "üßæ";
      else if (/cont|–∫–æ–Ω—Ç–∞–∫—Ç|phone|tel/.test(t+h)) icon = "üìû";
      a.setAttribute("data-ico", icon);
    });
  }
  document.addEventListener('DOMContentLoaded', setIcons);
  window.addEventListener('hashchange', setIcons);
  window.addEventListener('resize', setIcons);
})();
// === Mobile bottom-nav icons mapping v2 ===
(function(){
  function setIcons(){
    var nav = document.getElementById('topnav');
    if(!nav) return;
    var links = nav.querySelectorAll('.tabs a');
    links.forEach(function(a){
      var t = (a.textContent || "").toLowerCase();
      var h = (a.getAttribute('href') || "").toLowerCase();
      var icon = "‚ùñ";
      if (/summ|summary|–≥–ª–∞–≤|–æ –º–Ω–µ|about/.test(t+h)) icon = "üß≠";
      else if (/–∫–æ–º–ø–µ—Ç|skills|skill|–Ω–∞–≤—ã–∫/.test(t+h)) icon = "üß†";
      else if (/proj|–ø–æ—Ä—Ç—Ñ|works|cases|case/.test(t+h)) icon = "üìÇ";
      else if (/exp|–æ–ø—ã—Ç|career|cv|—Ä–µ–∑—é–º–µ/.test(t+h)) icon = "üíº";
      else if (/pub|—Å—Ç–∞—Ç—å|articles|blog/.test(t+h)) icon = "üßæ";
      else if (/cont|–∫–æ–Ω—Ç–∞–∫—Ç|phone|tel/.test(t+h)) icon = "üìû";
      a.setAttribute("data-ico", icon);
    });
  }
  document.addEventListener('DOMContentLoaded', setIcons);
  window.addEventListener('hashchange', setIcons);
  window.addEventListener('resize', setIcons);
})();
